<%= semantic_form_for question, namespace: "match", html: { class: "form-inline", id: "new_match_question", onsubmit: "fill_up_answer_pairs()" }  do |form| %>
<%= error_msg_for question %>
<div class="well">
  <div>
    <%= form.input :name, input_html: {class: "input-xxlarge"} %>
  </div>
    <%= form.hidden_field :type, value: "match" %>
    <%= hidden_field_tag :redirect_to_session, params[:redirect_to_session] %>
  <div>
    <%= form.input :tags, input_html: { class:  "input-xxlarge" , placeholder: "Tags" }, required: false %>
    <% if current_user.question_tags && !current_user.question_tags.blank? %>
    <%= select_tag "tags", options_for_select([[t("questions.add_from_your_tags"), '']] + current_user.question_tags.sort.map{ |t| [t, t]}), id: "match_select_tag" %>
    <br>&nbsp;
    <% end %>
  </div>
  <div>
    <label for="public" class="checkbox inline"><%= form.check_box :public, :class => "checkbox inline" %><%= t("public") %></label>
  </div>
</div>

<h3><%= t("surveys.edit.answer_pairs_for_match_survey") %></h3>
<div id="options" class="row-fluid">
  <div id="rightVisibleWrongHidden" class="span8">
    <% if question.answer_pairs.any? %>
      <% question.answer_pairs.each do |answerpair| %>
        <% if answerpair.correct? %>
          <%= form.fields_for :answer_pairs, answerpair do |pair| %>
              <%= render "match_question_answer_pair_fields", f: pair %>
          <% end %>
        <% end %>
      <% end %>
    <% end %>
    <!--<%= form.semantic_fields_for :answer_pairs, class: "form-inline" do |pair| %>
      <%= render "match_question_answer_pair_fields", f: pair %>
    <% end %>-->
    <div class="links">
      <%= link_to_add_association icon_tag("plus")+t("surveys.edit.add_answer_pair"), form, :answer_pairs, partial:"match_question_answer_pair_fields" %>
    </div>
    <br>
  </div>
  <div class="offset4"></div>
</div>
<%= form.hidden_field :collaborators_form, class:"collaborators-form" %>
<%= form.submit class: "btn btn-primary", id: "single_question_submit" %><span style="margin-left:20px;">
<% if params[:redirect_to_session] %>  
  <label for="also_start_question" class="checkbox"><%= check_box_tag "also_start_question", "true", true %> <%= t "questions.start_in_session" %>
</label><br>
</span> 
<% end %><small>(<%= link_to t("questions.chart_notice"), "#chartNoticeModal", data: {toggle: "modal"} %>)</small></span>
<% end %>
<% content_for :javascript do %>
  <script>
    /**
     * adds all possible combinations of false answer_pairs as hidden inputs to the form,
     * using the answer1s and answer2s from the correct answer_pairs
     */
    function fill_up_answer_pairs() {
      var inputs = $("#rightVisibleWrongHidden :input");
      var numberOfAllInputs = inputs.length;

      var pathArray = window.location.href.split( '/' ); 
      var actionName = pathArray[pathArray.length - 1];
      var numberOfCorrectAnswerPairs = 0;
      var period = 1;
      if(actionName == "new") {
        period = 3;
      } else {
        period = 4;
      }
      numberOfCorrectAnswerPairs = numberOfAllInputs / period;
      if(numberOfCorrectAnswerPairs <= 1) {
        return;
      }
  
      var correctAnswer1s = new Array(numberOfCorrectAnswerPairs);
      var correctAnswer2s = new Array(numberOfCorrectAnswerPairs);
      for (var i=0; i<numberOfCorrectAnswerPairs; i++) {  
        correctAnswer1s[i] = inputs[""+(1 + i*period)]["value"];
        correctAnswer2s[i] = inputs[""+(2 + i*period)]["value"];
      }

      var answerPairCollectionIndex = numberOfCorrectAnswerPairs + 1;
      for(var i=0; i<numberOfCorrectAnswerPairs; i++) {
        for(var j=0; j<numberOfCorrectAnswerPairs; j++) {
          if(j != i) {
            addWrongHiddenAnswerPair(correctAnswer1s[i], 
              correctAnswer2s[j], 
              answerPairCollectionIndex
            );
            answerPairCollectionIndex++;
          }
        }
      }
      
    }

    function addWrongHiddenAnswerPair(anzwer1, anzwer2, arrayIndex) {
      $("#rightVisibleWrongHidden").append(
        '<input id="question_answer_pairs_attributes_' + arrayIndex + '_answer1" name="question[answer_pairs_attributes][' + arrayIndex + '][answer1]" type="text" value="' + anzwer1 + '" />' +
        '<input id="question_answer_pairs_attributes_' + arrayIndex + '_answer2" name="question[answer_pairs_attributes][' + arrayIndex + '][answer2]" type="text" value="' + anzwer2 + '" />' +
        '<input name="question[answer_pairs_attributes][' + arrayIndex + '][correct]" type="hidden" value="0" />' +
        '<input id="question_answer_pairs_attributes_' + arrayIndex + '_correct" name="question[answer_pairs_attributes][' + arrayIndex + '][correct]" type="checkbox" value="0" />'
      );
    }

    $(document).ready(function() {
      $("#match_question_tags").tagsManager({ // http://welldonethings.com/tags/manager
        prefilled: "<%= question.tags %>",
        hiddenTagListName: "match_question[tags]",
		    preventSubmitOnEnter: true
      });
      $("#match_select_tag").change(function(){
		    $("#match_question_tags").tagsManager("pushTag", $("#match_select_tag").val());
		    $("#match_select_tag option:first").attr('selected',true);
      });
    });
  </script>
<% end %>